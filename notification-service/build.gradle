buildscript {
    dependencies {
        classpath "org.apache.avro:avro-tools:1.12.0"
    }
}

plugins {
    id 'org.shopping.demo.common-plugins'
    id 'org.shopping.demo.kafka-settings'
    id 'com.github.davidmc24.gradle.plugin.avro' version "1.9.1"
}

group = 'com.notification.demo'
version = '1.3.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

apply from: '../buildSrc/src/main/groovy/jib-task.gradle'

import org.apache.avro.tool.SpecificCompilerTool

def avroSchemasDir = "src/main/resources/avro"
def avroCodeGenerationDir = "src/main/java"

sourceSets.main.java.srcDirs += [avroCodeGenerationDir]

tasks.register('customAvroCodeGeneration') {
    inputs.dir(avroSchemasDir)
    outputs.dir(avroCodeGenerationDir)

    logging.captureStandardOutput(LogLevel.INFO)
    logging.captureStandardError(LogLevel.ERROR)
    doLast {
        new SpecificCompilerTool().run(System.in, System.out, System.err, List.of(
                "-encoding", "UTF-8",
                "-string",
                "-fieldVisibility", "private",
                "-noSetters",
                "schema", "$projectDir/$avroSchemasDir".toString(), "$projectDir/$avroCodeGenerationDir".toString()
        ))
    }
}

tasks.withType(JavaCompile).configureEach {
    dependsOn('customAvroCodeGeneration')
}